ktlint:
  stage: lint
  image: $CI_REGISTRY_IMAGE:latest
  script:
    - ./gradlew --gradle-user-home ./.gradleHome ktlintCheck
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - ./.gradle
      - ./gradle
      - ./.gradleHome
  artifacts:
    paths:
      - ./**/build/reports/ktlint/
    expire_in: 1 day
  rules:
    # When the MR target is the main / develop branch
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" ||
          $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    # When the MR source is a feature / fix / hotfix / renovate branch
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^feature/"  ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^fix/"      ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^hotfix/"   ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^renovate/"
  interruptible: true

androidLint:
  stage: lint
  image: $CI_REGISTRY_IMAGE:latest
  script:
    - ./gradlew --gradle-user-home ./.gradleHome lint
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - ./.gradle
      - ./gradle
      - ./.gradleHome
  artifacts:
    paths:
      - ./**/build/reports/lint-report.sarif
    expire_in: 1 day
  rules:
    # When the MR target is the main / develop branch
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" ||
          $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    # When the MR source is a feature / fix / hotfix / renovate branch
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^feature/"  ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^fix/"      ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^hotfix/"   ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^renovate/"
  interruptible: true

reviewdog:
  stage: lint
  image: $CI_REGISTRY_IMAGE/reviewdog:latest
  needs: ["ktlint", "androidLint"]
  script:
    # Display ktlint result
    - >
      for file in $(find . -regex '^.*/build/reports/ktlint/*/.*\.xml$' -type f); do
        cat $file                         |
        reviewdog                         \
          -f=checkstyle                   \
          -name=ktlint                    \
          -reporter=gitlab-mr-discussion  \
          -filter-mode=file
      done
    # Display Android Lint result
    - >
      for file in $(find . -regex '^.*/build/reports/lint-results.*\.sarif$' -type f); do
        cat $file                         |
        reviewdog                         \
          -f=sarif                        \
          -name=AndroidLint               \
          -reporter=gitlab-mr-discussion  \
          -filter-mode=file
      done
  rules:
    # When the MR target is the main / develop branch
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" ||
          $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
    # When the MR source is a feature / fix / hotfix / renovate branch
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^feature/"  ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^fix/"      ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^hotfix/"   ||
          $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^renovate/"
  interruptible: true
